include:
  - component: "${CI_SERVER_HOST}/ci/component/bazelisk/bazelisk@v1.0.0-beta.5"
    inputs:
      variables: |
        CI_PROJECT_DIR
        CI_PROJECT_ID
        CI_REMOTE_EXECUTOR
        CI_REMOTE_CACHE
        CI_REMOTE_HEADER
        CI_REMOTE_JOBS
        CI_BES_RESULTS_URL
        CI_BES_BACKEND
        CI_PROJECT_URL
        CI_COMMIT_REF_NAME
        CI_COMMIT_SHA
        CI_SERVER_HOST
        CI_LOCKFILE_MODE

default:
  tags:
    - arm64

.test:
  extends: .bazelisk
  cache:
    - !reference [.bazelisk, cache]
    - key: "bazel-cache-${CI_PROJECT_ID}"
      paths:
        - ".cache/bazel/disk"
        - ".cache/bazel/repo"
  variables:
    CI_LOCKFILE_MODE: error
    CONFIG: local
  script:
    - cd "${ROOT}"; bazelisk test --config="${CONFIG}" //...

config:
  extends: .test
  parallel:
    matrix:
      - ROOT:
          - .
          - e2e
        CONFIG:
          - local
          - remote

version:
  extends: .test
  variables:
    CI_LOCKFILE_MODE: "off"
  parallel:
    matrix:
      - ROOT:
          - .
          - e2e
        USE_BAZEL_VERSION:
          - 7.4.0
          - 7.x
          - last_rc

# TODO: switch this out for `rules_semantic_release`
semantic-release:
  extends: .test
  stage: .post
  needs:
    - config
    - version
  image: node:lts
  cache:
    key:
      prefix: "node"
      files:
        - package-lock.json
    paths:
      - node_modules
      - .cache/npm
  before_script:
    - npm config --location project set cache "${CI_PROJECT_DIR}/.cache/npm"
    - npm ci --prefer-offline
  script:
    - !reference [.bazelisk-fragment, rc]
    - npx semantic-release
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_REF_PROTECTED == "true"
